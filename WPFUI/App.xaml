<Application x:Class="WPFUI.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:WPFUI">
    <Application.Resources>
        <ResourceDictionary>
            
            <!--The base font for all text in the application-->
            <FontFamily x:Key="Poppins-Regular">Assets/Fonts/Poppins-Regular.ttf #Poppins Regular</FontFamily>
            <!--The base bold font for all the text in the application-->
            <FontFamily x:Key="Poppins-Bold">Assets/Fonts/Poppins-Bold.ttf #Poppins Bold</FontFamily>
            
            <!--Colours used throughout the application-->
            <Color x:Key="LBlue">#FF22BFFF</Color>
            <Color x:Key="DBlue">#FF0068FF</Color>
            <Color x:Key="LOrange">#FFFDAF90</Color>
            <Color x:Key="DOrange">#FFFF824F</Color>
            <SolidColorBrush x:Key="LOrangeBorder">#FFFDAF90</SolidColorBrush>
            <SolidColorBrush x:Key="DOrangeBorder">#FFFF5915</SolidColorBrush>

            <!--The gradient background for the application-->
            <LinearGradientBrush x:Key="BackGradient" EndPoint="0,1" StartPoint="0.5,0">
                <GradientStop Color="{StaticResource LBlue}" Offset="0"/>
                <GradientStop Color="{StaticResource DBlue}" Offset="1"/>
            </LinearGradientBrush>

            <!--The base gradient background for the application-->
            <Style x:Key="ProgramBackground" TargetType="UserControl">
                <Setter Property="Background" Value="Blue"/>
            </Style>
            
            <!--The base style for all text in the application-->
            <Style TargetType="TextBlock">
                <Setter Property="FontFamily" Value="{StaticResource Poppins-Regular}"/>
                <Setter Property="FontSize" Value="24"/>
                <Setter Property="Foreground" Value="White"/>
            </Style>
            
           <!--The base style for all bold text in the application-->
            <Style x:Key="Bold" TargetType="TextBlock">
                <Setter Property="FontFamily" Value="{StaticResource Poppins-Bold}"/>
                <Setter Property="FontSize" Value="25"/>
                <Setter Property="Foreground" Value="White"/>
            </Style>

            <!--The style used by the loading screen buttons-->
            <Style x:Key="LoadButtons" TargetType="{x:Type Button}">
                <Setter Property="Padding" Value="5"/>
                <Setter Property="Margin" Value="5"/>
                <Setter Property="Width" Value="80"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition Height="5"/>
                                </Grid.RowDefinitions>
                                <Border x:Name="loadButtonsBorder" Background="{StaticResource DOrangeBorder}" Grid.RowSpan="2"/>
                                <DockPanel>
                                    <ContentPresenter x:Name="loadButtonsPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" TextBlock.Foreground="White" />
                                </DockPanel>
                                <Rectangle x:Name="loadButtonsRectangle" Fill="{StaticResource LOrangeBorder}" Grid.Row="1" HorizontalAlignment="Left" Width="0"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <!--Mouse over trigger-->
                                <EventTrigger RoutedEvent="MouseEnter">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard>
                                            <Storyboard Storyboard.TargetName="loadButtonsRectangle" Storyboard.TargetProperty="Width">
                                                <DoubleAnimationUsingKeyFrames BeginTime="0:0:0" >
                                                    <SplineDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
                                                    <SplineDoubleKeyFrame KeyTime="0:0:0.1" Value="40"/>
                                                    <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="70"/>
                                                    <SplineDoubleKeyFrame KeyTime="0:0:0.4" Value="80"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="MouseLeave">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard>
                                            <Storyboard Storyboard.TargetName="loadButtonsRectangle" Storyboard.TargetProperty="Width">
                                                <DoubleAnimationUsingKeyFrames BeginTime="0:0:0" >
                                                    <SplineDoubleKeyFrame KeyTime="0:0:0" Value="80"/>
                                                    <SplineDoubleKeyFrame KeyTime="0:0:0.1" Value="70"/>
                                                    <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="40"/>
                                                    <SplineDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--Changing the colour of tooltips-->
            <Style TargetType="{x:Type ToolTip}">
                <Setter Property="Background" Value="Gray"/>
            </Style>
            
            <!--Style for the buying buttons-->
            <Style x:Key="BuyButonStyle" TargetType="{x:Type Button}">
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Margin" Value="4"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid Name="buttonGrid">
                                <Image Name="buttonImage" Source="Assets/Images/BuyImage.png"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <!--Mouse over-->
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Margin" Value="2"/>
                                </Trigger>
                                <!--Not mouse over-->
                                <Trigger Property="IsMouseOver" Value="False">
                                    <Setter Property="Margin" Value="4"/>
                                </Trigger>
                                <!--Is enabled-->
                                <Trigger Property="IsEnabled" Value="False">
                                    <Trigger.Setters>
                                        <Setter Property="Opacity" Value="0.5"/>
                                    </Trigger.Setters>
                                </Trigger>
                                <!--Is not enabled-->
                                <Trigger Property="IsEnabled" Value="True">
                                    <Trigger.Setters>
                                        <Setter Property="Opacity" Value="1"/>
                                    </Trigger.Setters>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!--Style for the buy button borders-->
            <Style x:Key="BuyButtonStyle" TargetType="{x:Type Border}">
                <Setter Property="CornerRadius" Value="20"/>
                <Setter Property="Margin" Value="2"/>
                <Setter Property="Height" Value="50"/>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="BorderBrush" Value="{StaticResource DOrangeBorder}"/>
                <Setter Property="Background" >
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,1" EndPoint="0.5,0">
                            <GradientStop Color="{StaticResource DOrange}" Offset="0.4"/>
                            <GradientStop Color="{StaticResource LOrange}" Offset="1.4"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Style>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary>
                    <local:Bootstrapper x:Key="Bootstrapper"/>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Application.Resources>
</Application>